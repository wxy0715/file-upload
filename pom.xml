<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.seasky</groupId>
    <artifactId>budget-file</artifactId>
    <version>1.0</version>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.seasky</groupId>
                <artifactId>budgetservice</artifactId>
                <version>1.0.2-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- spring-file-storage 必须要引入 -->
        <dependency>
            <groupId>org.dromara.x-file-storage</groupId>
            <artifactId>x-file-storage-spring</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!-- MinIO 不使用的情况下可以不引入 -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seasky</groupId>
            <artifactId>budget-mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seasky</groupId>
            <artifactId>budget-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seasky</groupId>
            <artifactId>budget-redis</artifactId>
        </dependency>
        <!--logstash-->
        <dependency>
            <groupId>com.seasky</groupId>
            <artifactId>budget-logstash</artifactId>
        </dependency>
    </dependencies>
    <!--构建镜像-->
    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.xml</include>
                    <include>db/*</include>
                    <include>*.properties</include>
                    <include>*.yml</include>
                    <include>*.conf</include>
                </includes>
                <excludes>
                    <exclude>iconfont/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>static/**</include>
                    <include>iconfont/**</include>
                </includes>
            </resource>
            <resource> <!-- 指定必须编译打包的资源文件 -->
                <directory>${basedir}/src/main/resources/env/${env}</directory>
                <targetPath>${basedir}/target/classes</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin> <!-- war 包插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration><!-- mainClass启动类 -->
                    <mainClass>com.seasky.Application</mainClass>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.2.9.RELEASE</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
                <plugin> <!-- war 包插件 -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.2.2</version>
                    <configuration>
                        <dockerHost>https://47.110.127.118:2375</dockerHost>
                        <imageName>demo.seaskysh.com/seaskypub/${project.artifactId}:${project.version}</imageName>
                        <baseImage>demo.seaskysh.com/seaskypub/java</baseImage>
                        <maintainer>seaskysh.com</maintainer>
                        <workdir>/ROOT</workdir>
                        <cmd>["java", "-version"]</cmd>
                        <dockerCertPath>${project.basedir}/pem</dockerCertPath>
                        <entryPoint>["sh", "-c", "java $JAVA_OPTS -jar ${project.build.finalName}.jar -XX:+StartAttachListener"]</entryPoint>
                        <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                        <resources>
                            <resource>
                                <targetPath>/ROOT</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!--设置配置文件-->
    <profiles>
        <profile> <!-- 本地开发环境 -->
            <id>dev</id>
            <!-- 设置默认激活配置 -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>dev</env>
            </properties>
        </profile>
    </profiles>

</project>